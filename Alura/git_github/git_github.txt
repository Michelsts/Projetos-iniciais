GitHub
Para utilizar um editor de texto melhorado no GitHub se presiona (.) para abrir um modelo de editor similar ao VsCode com algumas limitações.

Algumas linhas de comando
ls -> para lista todos os itrens da pasta atual
cd [nome_da_pasta] -> para entrar em uma pasta específica
mkdir [nome_da_nova_pasta] -> para criar um novo diretorio na pasta atual
rm -rf [nome_do_diretorio_ou_arquivo] -> para deletar um diretório ou arquivo (atenção: o -f evita a confirmação e o -r é recursivo, apagará tudo)

Comandos Git 
git log -> para exibir todas as modificações já realizadas 
git log --oneline -> para exibir todas as modificações em um única linhas
git pull -> para atualizar os arquivos locais com o remoto
git status -> para verificar as mudanças locais
git commit (arquivo ou pasta) (-m, para todos arquivos) -> salvar as 
Co-authored-by: NOME <email> -> Para adiconar outros colaboradores ao projeto junto ao commit (Pula 2 linhas)
atualizaçãoes do projeto local
git push origin (branch) -> empurrar as atualizações locais para o remoto
git add . -> para adicionar todos os arquivos para commit
git remote add apelido url -> Para adicionar um novo repositório (origin para o repositório principal)
git remote -v -> Listar os repositórios remotos
git remote remove origin -> Para remover um repositório remoto
git remote set-url origin http -> Para alterar uma URL de um repositório remoto
git remote renema origin novo-origin -> Para alterar um apelido de repositório
git clone URL -> Para clonar um repositório
git revert id-commit -> Para restaurar o commit
git reset --hard id-commit -> Para remover um commit (o id tem que ser o anterior ao commit que será apagado)
git commit --amend -m "msg correta" -> Para alterar o nome do commit
.gitignore -> Para ignorar arquivos (gitignore.io)

